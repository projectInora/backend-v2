# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''
    cnt.uploads.cms.banner.images: '__cnt/__uploads_/cms/images_/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\EventListener\OAuth2UserResolveListener:
        arguments:
            - '@security.user_providers'
            - '@security.password_hasher'
        tags:
            - { name: kernel.event_listener, event: league.oauth2_server.event.user_resolve, method: onUserResolve }

    App\EventListener\OAuth2ScopeResolveListener:
        tags:
            - { name: kernel.event_listener, event: league.oauth2_server.event.scope_resolve, method: onScopeResolve }

    App\Repository\Authentication\AuthUserTokenAccessRepository:
        tags:
            - { name: 'league.oauth2_server.repository.access_token' }

    App\EventListener\OAuth2TokenIssueListener:
        tags:
            - { name: kernel.event_listener, event: access_token.issued, method: onAccessTokenIssuedEvent }

